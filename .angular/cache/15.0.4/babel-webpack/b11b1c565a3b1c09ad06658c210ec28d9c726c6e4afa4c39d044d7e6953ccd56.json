{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n  return source => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator {\n  constructor(dueTime, scheduler) {\n    this.dueTime = dueTime;\n    this.scheduler = scheduler;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n\n}\n\nclass DebounceTimeSubscriber extends Subscriber {\n  constructor(destination, dueTime, scheduler) {\n    super(destination);\n    this.dueTime = dueTime;\n    this.scheduler = scheduler;\n    this.debouncedSubscription = null;\n    this.lastValue = null;\n    this.hasValue = false;\n  }\n\n  _next(value) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext() {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const {\n        lastValue\n      } = this;\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  clearDebounce() {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n\n}\n\nfunction dispatchNext(subscriber) {\n  subscriber.debouncedNext();\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/debounceTime.js"],"names":["Subscriber","async","debounceTime","dueTime","scheduler","source","lift","DebounceTimeOperator","constructor","call","subscriber","subscribe","DebounceTimeSubscriber","destination","debouncedSubscription","lastValue","hasValue","_next","value","clearDebounce","add","schedule","dispatchNext","_complete","debouncedNext","complete","next","remove","unsubscribe"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AACA,OAAO,SAASC,YAAT,CAAsBC,OAAtB,EAA+BC,SAAS,GAAGH,KAA3C,EAAkD;AACrD,SAAQI,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,oBAAJ,CAAyBJ,OAAzB,EAAkCC,SAAlC,CAAZ,CAAnB;AACH;;AACD,MAAMG,oBAAN,CAA2B;AACvBC,EAAAA,WAAW,CAACL,OAAD,EAAUC,SAAV,EAAqB;AAC5B,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AACDK,EAAAA,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;AACrB,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,sBAAJ,CAA2BF,UAA3B,EAAuC,KAAKP,OAA5C,EAAqD,KAAKC,SAA1D,CAAjB,CAAP;AACH;;AAPsB;;AAS3B,MAAMQ,sBAAN,SAAqCZ,UAArC,CAAgD;AAC5CQ,EAAAA,WAAW,CAACK,WAAD,EAAcV,OAAd,EAAuBC,SAAvB,EAAkC;AACzC,UAAMS,WAAN;AACA,SAAKV,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKU,qBAAL,GAA6B,IAA7B;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACH;;AACDC,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACT,SAAKC,aAAL;AACA,SAAKJ,SAAL,GAAiBG,KAAjB;AACA,SAAKF,QAAL,GAAgB,IAAhB;AACA,SAAKI,GAAL,CAAS,KAAKN,qBAAL,GAA6B,KAAKV,SAAL,CAAeiB,QAAf,CAAwBC,YAAxB,EAAsC,KAAKnB,OAA3C,EAAoD,IAApD,CAAtC;AACH;;AACDoB,EAAAA,SAAS,GAAG;AACR,SAAKC,aAAL;AACA,SAAKX,WAAL,CAAiBY,QAAjB;AACH;;AACDD,EAAAA,aAAa,GAAG;AACZ,SAAKL,aAAL;;AACA,QAAI,KAAKH,QAAT,EAAmB;AACf,YAAM;AAAED,QAAAA;AAAF,UAAgB,IAAtB;AACA,WAAKA,SAAL,GAAiB,IAAjB;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACA,WAAKH,WAAL,CAAiBa,IAAjB,CAAsBX,SAAtB;AACH;AACJ;;AACDI,EAAAA,aAAa,GAAG;AACZ,UAAML,qBAAqB,GAAG,KAAKA,qBAAnC;;AACA,QAAIA,qBAAqB,KAAK,IAA9B,EAAoC;AAChC,WAAKa,MAAL,CAAYb,qBAAZ;AACAA,MAAAA,qBAAqB,CAACc,WAAtB;AACA,WAAKd,qBAAL,GAA6B,IAA7B;AACH;AACJ;;AAnC2C;;AAqChD,SAASQ,YAAT,CAAsBZ,UAAtB,EAAkC;AAC9BA,EAAAA,UAAU,CAACc,aAAX;AACH","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}