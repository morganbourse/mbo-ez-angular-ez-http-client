{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n  return new Observable(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(value => {\n      sub.add(scheduler.schedule(() => {\n        subscriber.next(value);\n        sub.add(scheduler.schedule(() => subscriber.complete()));\n      }));\n    }, err => {\n      sub.add(scheduler.schedule(() => subscriber.error(err)));\n    })));\n    return sub;\n  });\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/scheduled/schedulePromise.js"],"names":["Observable","Subscription","schedulePromise","input","scheduler","subscriber","sub","add","schedule","then","value","next","complete","err","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,SAAhC,EAA2C;AAC9C,SAAO,IAAIJ,UAAJ,CAAeK,UAAU,IAAI;AAChC,UAAMC,GAAG,GAAG,IAAIL,YAAJ,EAAZ;AACAK,IAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAML,KAAK,CAACM,IAAN,CAAWC,KAAK,IAAI;AACjDJ,MAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAM;AAC7BH,QAAAA,UAAU,CAACM,IAAX,CAAgBD,KAAhB;AACAJ,QAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAMH,UAAU,CAACO,QAAX,EAAzB,CAAR;AACH,OAHO,CAAR;AAIH,KALgC,EAK9BC,GAAG,IAAI;AACNP,MAAAA,GAAG,CAACC,GAAJ,CAAQH,SAAS,CAACI,QAAV,CAAmB,MAAMH,UAAU,CAACS,KAAX,CAAiBD,GAAjB,CAAzB,CAAR;AACH,KAPgC,CAAzB,CAAR;AAQA,WAAOP,GAAP;AACH,GAXM,CAAP;AAYH","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function schedulePromise(input, scheduler) {\n    return new Observable(subscriber => {\n        const sub = new Subscription();\n        sub.add(scheduler.schedule(() => input.then(value => {\n            sub.add(scheduler.schedule(() => {\n                subscriber.next(value);\n                sub.add(scheduler.schedule(() => subscriber.complete()));\n            }));\n        }, err => {\n            sub.add(scheduler.schedule(() => subscriber.error(err)));\n        })));\n        return sub;\n    });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}