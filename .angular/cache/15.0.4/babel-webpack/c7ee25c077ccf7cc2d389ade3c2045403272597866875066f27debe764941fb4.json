{"ast":null,"code":"import { Action } from './Action';\nexport class AsyncAction extends Action {\n  constructor(scheduler, work) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n    this.pending = false;\n  }\n\n  schedule(state, delay = 0) {\n    if (this.closed) {\n      return this;\n    }\n\n    this.state = state;\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.pending = true;\n    this.delay = delay;\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  }\n\n  requestAsyncId(scheduler, id, delay = 0) {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  recycleAsyncId(scheduler, id, delay = 0) {\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n\n    clearInterval(id);\n    return undefined;\n  }\n\n  execute(state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n\n    const error = this._execute(state, delay);\n\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  _execute(state, delay) {\n    let errored = false;\n    let errorValue = undefined;\n\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  _unsubscribe() {\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n    this.work = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/scheduler/AsyncAction.js"],"names":["Action","AsyncAction","constructor","scheduler","work","pending","schedule","state","delay","closed","id","recycleAsyncId","requestAsyncId","setInterval","flush","bind","clearInterval","undefined","execute","Error","error","_execute","errored","errorValue","e","unsubscribe","_unsubscribe","actions","index","indexOf","splice"],"mappings":"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","sourcesContent":["import { Action } from './Action';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        return setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        if (delay !== null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        clearInterval(id);\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, delay) {\n        let errored = false;\n        let errorValue = undefined;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = !!e && e || new Error(e);\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    _unsubscribe() {\n        const id = this.id;\n        const scheduler = this.scheduler;\n        const actions = scheduler.actions;\n        const index = actions.indexOf(this);\n        this.work = null;\n        this.state = null;\n        this.pending = false;\n        this.scheduler = null;\n        if (index !== -1) {\n            actions.splice(index, 1);\n        }\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, null);\n        }\n        this.delay = null;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}