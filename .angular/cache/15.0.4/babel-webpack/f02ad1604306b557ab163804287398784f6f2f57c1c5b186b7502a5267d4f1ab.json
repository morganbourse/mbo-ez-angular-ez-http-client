{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n  return source => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator {\n  constructor(total) {\n    this.total = total;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n\n}\n\nclass SkipSubscriber extends Subscriber {\n  constructor(destination, total) {\n    super(destination);\n    this.total = total;\n    this.count = 0;\n  }\n\n  _next(x) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/skip.js"],"names":["Subscriber","skip","count","source","lift","SkipOperator","constructor","total","call","subscriber","subscribe","SkipSubscriber","destination","_next","x","next"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACxB,SAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,YAAJ,CAAiBH,KAAjB,CAAZ,CAAnB;AACH;;AACD,MAAMG,YAAN,CAAmB;AACfC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDC,EAAAA,IAAI,CAACC,UAAD,EAAaN,MAAb,EAAqB;AACrB,WAAOA,MAAM,CAACO,SAAP,CAAiB,IAAIC,cAAJ,CAAmBF,UAAnB,EAA+B,KAAKF,KAApC,CAAjB,CAAP;AACH;;AANc;;AAQnB,MAAMI,cAAN,SAA6BX,UAA7B,CAAwC;AACpCM,EAAAA,WAAW,CAACM,WAAD,EAAcL,KAAd,EAAqB;AAC5B,UAAMK,WAAN;AACA,SAAKL,KAAL,GAAaA,KAAb;AACA,SAAKL,KAAL,GAAa,CAAb;AACH;;AACDW,EAAAA,KAAK,CAACC,CAAD,EAAI;AACL,QAAI,EAAE,KAAKZ,KAAP,GAAe,KAAKK,KAAxB,EAA+B;AAC3B,WAAKK,WAAL,CAAiBG,IAAjB,CAAsBD,CAAtB;AACH;AACJ;;AAVmC","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}