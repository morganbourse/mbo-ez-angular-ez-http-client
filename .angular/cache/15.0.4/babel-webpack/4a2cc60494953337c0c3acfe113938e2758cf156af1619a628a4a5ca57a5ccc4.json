{"ast":null,"code":"import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n  return function windowWhenOperatorFunction(source) {\n    return source.lift(new WindowOperator(closingSelector));\n  };\n}\n\nclass WindowOperator {\n  constructor(closingSelector) {\n    this.closingSelector = closingSelector;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n\n}\n\nclass WindowSubscriber extends OuterSubscriber {\n  constructor(destination, closingSelector) {\n    super(destination);\n    this.destination = destination;\n    this.closingSelector = closingSelector;\n    this.openWindow();\n  }\n\n  notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error) {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub) {\n    this.openWindow(innerSub);\n  }\n\n  _next(value) {\n    this.window.next(value);\n  }\n\n  _error(err) {\n    this.window.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  _complete() {\n    this.window.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  unsubscribeClosingNotification() {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  openWindow(innerSub = null) {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject();\n    this.destination.next(window);\n    let closingNotifier;\n\n    try {\n      const {\n        closingSelector\n      } = this;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/windowWhen.js"],"names":["Subject","OuterSubscriber","subscribeToResult","windowWhen","closingSelector","windowWhenOperatorFunction","source","lift","WindowOperator","constructor","call","subscriber","subscribe","WindowSubscriber","destination","openWindow","notifyNext","_outerValue","_innerValue","_outerIndex","_innerIndex","innerSub","notifyError","error","_error","notifyComplete","_next","value","window","next","err","unsubscribeClosingNotification","_complete","complete","closingNotification","unsubscribe","remove","prevWindow","closingNotifier","e","add"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,OAAO,SAASC,UAAT,CAAoBC,eAApB,EAAqC;AACxC,SAAO,SAASC,0BAAT,CAAoCC,MAApC,EAA4C;AAC/C,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,cAAJ,CAAmBJ,eAAnB,CAAZ,CAAP;AACH,GAFD;AAGH;;AACD,MAAMI,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACL,eAAD,EAAkB;AACzB,SAAKA,eAAL,GAAuBA,eAAvB;AACH;;AACDM,EAAAA,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;AACrB,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,gBAAJ,CAAqBF,UAArB,EAAiC,KAAKP,eAAtC,CAAjB,CAAP;AACH;;AANgB;;AAQrB,MAAMS,gBAAN,SAA+BZ,eAA/B,CAA+C;AAC3CQ,EAAAA,WAAW,CAACK,WAAD,EAAcV,eAAd,EAA+B;AACtC,UAAMU,WAAN;AACA,SAAKA,WAAL,GAAmBA,WAAnB;AACA,SAAKV,eAAL,GAAuBA,eAAvB;AACA,SAAKW,UAAL;AACH;;AACDC,EAAAA,UAAU,CAACC,WAAD,EAAcC,WAAd,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAqDC,QAArD,EAA+D;AACrE,SAAKN,UAAL,CAAgBM,QAAhB;AACH;;AACDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,SAAKC,MAAL,CAAYD,KAAZ;AACH;;AACDE,EAAAA,cAAc,CAACJ,QAAD,EAAW;AACrB,SAAKN,UAAL,CAAgBM,QAAhB;AACH;;AACDK,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACT,SAAKC,MAAL,CAAYC,IAAZ,CAAiBF,KAAjB;AACH;;AACDH,EAAAA,MAAM,CAACM,GAAD,EAAM;AACR,SAAKF,MAAL,CAAYL,KAAZ,CAAkBO,GAAlB;AACA,SAAKhB,WAAL,CAAiBS,KAAjB,CAAuBO,GAAvB;AACA,SAAKC,8BAAL;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,SAAKJ,MAAL,CAAYK,QAAZ;AACA,SAAKnB,WAAL,CAAiBmB,QAAjB;AACA,SAAKF,8BAAL;AACH;;AACDA,EAAAA,8BAA8B,GAAG;AAC7B,QAAI,KAAKG,mBAAT,EAA8B;AAC1B,WAAKA,mBAAL,CAAyBC,WAAzB;AACH;AACJ;;AACDpB,EAAAA,UAAU,CAACM,QAAQ,GAAG,IAAZ,EAAkB;AACxB,QAAIA,QAAJ,EAAc;AACV,WAAKe,MAAL,CAAYf,QAAZ;AACAA,MAAAA,QAAQ,CAACc,WAAT;AACH;;AACD,UAAME,UAAU,GAAG,KAAKT,MAAxB;;AACA,QAAIS,UAAJ,EAAgB;AACZA,MAAAA,UAAU,CAACJ,QAAX;AACH;;AACD,UAAML,MAAM,GAAG,KAAKA,MAAL,GAAc,IAAI5B,OAAJ,EAA7B;AACA,SAAKc,WAAL,CAAiBe,IAAjB,CAAsBD,MAAtB;AACA,QAAIU,eAAJ;;AACA,QAAI;AACA,YAAM;AAAElC,QAAAA;AAAF,UAAsB,IAA5B;AACAkC,MAAAA,eAAe,GAAGlC,eAAe,EAAjC;AACH,KAHD,CAIA,OAAOmC,CAAP,EAAU;AACN,WAAKzB,WAAL,CAAiBS,KAAjB,CAAuBgB,CAAvB;AACA,WAAKX,MAAL,CAAYL,KAAZ,CAAkBgB,CAAlB;AACA;AACH;;AACD,SAAKC,GAAL,CAAS,KAAKN,mBAAL,GAA2BhC,iBAAiB,CAAC,IAAD,EAAOoC,eAAP,CAArD;AACH;;AAxD0C","sourcesContent":["import { Subject } from '../Subject';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nexport function windowWhen(closingSelector) {\n    return function windowWhenOperatorFunction(source) {\n        return source.lift(new WindowOperator(closingSelector));\n    };\n}\nclass WindowOperator {\n    constructor(closingSelector) {\n        this.closingSelector = closingSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n    }\n}\nclass WindowSubscriber extends OuterSubscriber {\n    constructor(destination, closingSelector) {\n        super(destination);\n        this.destination = destination;\n        this.closingSelector = closingSelector;\n        this.openWindow();\n    }\n    notifyNext(_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {\n        this.openWindow(innerSub);\n    }\n    notifyError(error) {\n        this._error(error);\n    }\n    notifyComplete(innerSub) {\n        this.openWindow(innerSub);\n    }\n    _next(value) {\n        this.window.next(value);\n    }\n    _error(err) {\n        this.window.error(err);\n        this.destination.error(err);\n        this.unsubscribeClosingNotification();\n    }\n    _complete() {\n        this.window.complete();\n        this.destination.complete();\n        this.unsubscribeClosingNotification();\n    }\n    unsubscribeClosingNotification() {\n        if (this.closingNotification) {\n            this.closingNotification.unsubscribe();\n        }\n    }\n    openWindow(innerSub = null) {\n        if (innerSub) {\n            this.remove(innerSub);\n            innerSub.unsubscribe();\n        }\n        const prevWindow = this.window;\n        if (prevWindow) {\n            prevWindow.complete();\n        }\n        const window = this.window = new Subject();\n        this.destination.next(window);\n        let closingNotifier;\n        try {\n            const { closingSelector } = this;\n            closingNotifier = closingSelector();\n        }\n        catch (e) {\n            this.destination.error(e);\n            this.window.error(e);\n            return;\n        }\n        this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}