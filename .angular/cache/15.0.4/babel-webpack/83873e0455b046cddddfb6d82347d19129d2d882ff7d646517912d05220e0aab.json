{"ast":null,"code":"import { map } from './map';\nexport function pluck(...properties) {\n  const length = properties.length;\n\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n\n  return source => map(plucker(properties, length))(source);\n}\n\nfunction plucker(props, length) {\n  const mapper = x => {\n    let currentProp = x;\n\n    for (let i = 0; i < length; i++) {\n      const p = currentProp != null ? currentProp[props[i]] : undefined;\n\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n\n    return currentProp;\n  };\n\n  return mapper;\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/pluck.js"],"names":["map","pluck","properties","length","Error","source","plucker","props","mapper","x","currentProp","i","p","undefined"],"mappings":"AAAA,SAASA,GAAT,QAAoB,OAApB;AACA,OAAO,SAASC,KAAT,CAAe,GAAGC,UAAlB,EAA8B;AACjC,QAAMC,MAAM,GAAGD,UAAU,CAACC,MAA1B;;AACA,MAAIA,MAAM,KAAK,CAAf,EAAkB;AACd,UAAM,IAAIC,KAAJ,CAAU,qCAAV,CAAN;AACH;;AACD,SAAQC,MAAD,IAAYL,GAAG,CAACM,OAAO,CAACJ,UAAD,EAAaC,MAAb,CAAR,CAAH,CAAiCE,MAAjC,CAAnB;AACH;;AACD,SAASC,OAAT,CAAiBC,KAAjB,EAAwBJ,MAAxB,EAAgC;AAC5B,QAAMK,MAAM,GAAIC,CAAD,IAAO;AAClB,QAAIC,WAAW,GAAGD,CAAlB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,MAApB,EAA4BQ,CAAC,EAA7B,EAAiC;AAC7B,YAAMC,CAAC,GAAGF,WAAW,IAAI,IAAf,GAAsBA,WAAW,CAACH,KAAK,CAACI,CAAD,CAAN,CAAjC,GAA8CE,SAAxD;;AACA,UAAID,CAAC,KAAK,KAAK,CAAf,EAAkB;AACdF,QAAAA,WAAW,GAAGE,CAAd;AACH,OAFD,MAGK;AACD,eAAOC,SAAP;AACH;AACJ;;AACD,WAAOH,WAAP;AACH,GAZD;;AAaA,SAAOF,MAAP;AACH","sourcesContent":["import { map } from './map';\nexport function pluck(...properties) {\n    const length = properties.length;\n    if (length === 0) {\n        throw new Error('list of properties cannot be empty.');\n    }\n    return (source) => map(plucker(properties, length))(source);\n}\nfunction plucker(props, length) {\n    const mapper = (x) => {\n        let currentProp = x;\n        for (let i = 0; i < length; i++) {\n            const p = currentProp != null ? currentProp[props[i]] : undefined;\n            if (p !== void 0) {\n                currentProp = p;\n            }\n            else {\n                return undefined;\n            }\n        }\n        return currentProp;\n    };\n    return mapper;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}