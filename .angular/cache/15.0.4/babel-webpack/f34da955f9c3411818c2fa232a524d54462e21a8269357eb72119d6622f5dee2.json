{"ast":null,"code":"import { Subscription } from './Subscription';\nexport class SubjectSubscription extends Subscription {\n  constructor(subject, subscriber) {\n    super();\n    this.subject = subject;\n    this.subscriber = subscriber;\n    this.closed = false;\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n    const subject = this.subject;\n    const observers = subject.observers;\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/SubjectSubscription.js"],"names":["Subscription","SubjectSubscription","constructor","subject","subscriber","closed","unsubscribe","observers","length","isStopped","subscriberIndex","indexOf","splice"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AACA,OAAO,MAAMC,mBAAN,SAAkCD,YAAlC,CAA+C;AAClDE,EAAAA,WAAW,CAACC,OAAD,EAAUC,UAAV,EAAsB;AAC7B;AACA,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,MAAL,GAAc,KAAd;AACH;;AACDC,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKD,MAAT,EAAiB;AACb;AACH;;AACD,SAAKA,MAAL,GAAc,IAAd;AACA,UAAMF,OAAO,GAAG,KAAKA,OAArB;AACA,UAAMI,SAAS,GAAGJ,OAAO,CAACI,SAA1B;AACA,SAAKJ,OAAL,GAAe,IAAf;;AACA,QAAI,CAACI,SAAD,IAAcA,SAAS,CAACC,MAAV,KAAqB,CAAnC,IAAwCL,OAAO,CAACM,SAAhD,IAA6DN,OAAO,CAACE,MAAzE,EAAiF;AAC7E;AACH;;AACD,UAAMK,eAAe,GAAGH,SAAS,CAACI,OAAV,CAAkB,KAAKP,UAAvB,CAAxB;;AACA,QAAIM,eAAe,KAAK,CAAC,CAAzB,EAA4B;AACxBH,MAAAA,SAAS,CAACK,MAAV,CAAiBF,eAAjB,EAAkC,CAAlC;AACH;AACJ;;AAtBiD","sourcesContent":["import { Subscription } from './Subscription';\nexport class SubjectSubscription extends Subscription {\n    constructor(subject, subscriber) {\n        super();\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        const subject = this.subject;\n        const observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        const subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}