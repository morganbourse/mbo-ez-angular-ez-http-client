{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function refCount() {\n  return function refCountOperatorFunction(source) {\n    return source.lift(new RefCountOperator(source));\n  };\n}\n\nclass RefCountOperator {\n  constructor(connectable) {\n    this.connectable = connectable;\n  }\n\n  call(subscriber, source) {\n    const {\n      connectable\n    } = this;\n    connectable._refCount++;\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      refCounter.connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n\n}\n\nclass RefCountSubscriber extends Subscriber {\n  constructor(destination, connectable) {\n    super(destination);\n    this.connectable = connectable;\n  }\n\n  _unsubscribe() {\n    const {\n      connectable\n    } = this;\n\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = connectable._refCount;\n\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    connectable._refCount = refCount - 1;\n\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    const {\n      connection\n    } = this;\n    const sharedConnection = connectable._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/refCount.js"],"names":["Subscriber","refCount","refCountOperatorFunction","source","lift","RefCountOperator","constructor","connectable","call","subscriber","_refCount","refCounter","RefCountSubscriber","subscription","subscribe","closed","connection","connect","destination","_unsubscribe","sharedConnection","_connection","unsubscribe"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,QAAT,GAAoB;AACvB,SAAO,SAASC,wBAAT,CAAkCC,MAAlC,EAA0C;AAC7C,WAAOA,MAAM,CAACC,IAAP,CAAY,IAAIC,gBAAJ,CAAqBF,MAArB,CAAZ,CAAP;AACH,GAFD;AAGH;;AACD,MAAME,gBAAN,CAAuB;AACnBC,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,SAAKA,WAAL,GAAmBA,WAAnB;AACH;;AACDC,EAAAA,IAAI,CAACC,UAAD,EAAaN,MAAb,EAAqB;AACrB,UAAM;AAAEI,MAAAA;AAAF,QAAkB,IAAxB;AACAA,IAAAA,WAAW,CAACG,SAAZ;AACA,UAAMC,UAAU,GAAG,IAAIC,kBAAJ,CAAuBH,UAAvB,EAAmCF,WAAnC,CAAnB;AACA,UAAMM,YAAY,GAAGV,MAAM,CAACW,SAAP,CAAiBH,UAAjB,CAArB;;AACA,QAAI,CAACA,UAAU,CAACI,MAAhB,EAAwB;AACpBJ,MAAAA,UAAU,CAACK,UAAX,GAAwBT,WAAW,CAACU,OAAZ,EAAxB;AACH;;AACD,WAAOJ,YAAP;AACH;;AAbkB;;AAevB,MAAMD,kBAAN,SAAiCZ,UAAjC,CAA4C;AACxCM,EAAAA,WAAW,CAACY,WAAD,EAAcX,WAAd,EAA2B;AAClC,UAAMW,WAAN;AACA,SAAKX,WAAL,GAAmBA,WAAnB;AACH;;AACDY,EAAAA,YAAY,GAAG;AACX,UAAM;AAAEZ,MAAAA;AAAF,QAAkB,IAAxB;;AACA,QAAI,CAACA,WAAL,EAAkB;AACd,WAAKS,UAAL,GAAkB,IAAlB;AACA;AACH;;AACD,SAAKT,WAAL,GAAmB,IAAnB;AACA,UAAMN,QAAQ,GAAGM,WAAW,CAACG,SAA7B;;AACA,QAAIT,QAAQ,IAAI,CAAhB,EAAmB;AACf,WAAKe,UAAL,GAAkB,IAAlB;AACA;AACH;;AACDT,IAAAA,WAAW,CAACG,SAAZ,GAAwBT,QAAQ,GAAG,CAAnC;;AACA,QAAIA,QAAQ,GAAG,CAAf,EAAkB;AACd,WAAKe,UAAL,GAAkB,IAAlB;AACA;AACH;;AACD,UAAM;AAAEA,MAAAA;AAAF,QAAiB,IAAvB;AACA,UAAMI,gBAAgB,GAAGb,WAAW,CAACc,WAArC;AACA,SAAKL,UAAL,GAAkB,IAAlB;;AACA,QAAII,gBAAgB,KAAK,CAACJ,UAAD,IAAeI,gBAAgB,KAAKJ,UAAzC,CAApB,EAA0E;AACtEI,MAAAA,gBAAgB,CAACE,WAAjB;AACH;AACJ;;AA5BuC","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator(source));\n    };\n}\nclass RefCountOperator {\n    constructor(connectable) {\n        this.connectable = connectable;\n    }\n    call(subscriber, source) {\n        const { connectable } = this;\n        connectable._refCount++;\n        const refCounter = new RefCountSubscriber(subscriber, connectable);\n        const subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    }\n}\nclass RefCountSubscriber extends Subscriber {\n    constructor(destination, connectable) {\n        super(destination);\n        this.connectable = connectable;\n    }\n    _unsubscribe() {\n        const { connectable } = this;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        const refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        const { connection } = this;\n        const sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}