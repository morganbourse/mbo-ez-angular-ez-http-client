{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n  return source => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator {\n  constructor(duration, scheduler, leading, trailing) {\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n  }\n\n}\n\nclass ThrottleTimeSubscriber extends Subscriber {\n  constructor(destination, duration, scheduler, leading, trailing) {\n    super(destination);\n    this.duration = duration;\n    this.scheduler = scheduler;\n    this.leading = leading;\n    this.trailing = trailing;\n    this._hasTrailingValue = false;\n    this._trailingValue = null;\n  }\n\n  _next(value) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, {\n        subscriber: this\n      }));\n\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n\n}\n\nfunction dispatchNext(arg) {\n  const {\n    subscriber\n  } = arg;\n  subscriber.clearThrottle();\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/throttleTime.js"],"names":["Subscriber","async","defaultThrottleConfig","throttleTime","duration","scheduler","config","source","lift","ThrottleTimeOperator","leading","trailing","constructor","call","subscriber","subscribe","ThrottleTimeSubscriber","destination","_hasTrailingValue","_trailingValue","_next","value","throttled","add","schedule","dispatchNext","next","_complete","complete","clearThrottle","unsubscribe","remove","arg"],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { defaultThrottleConfig } from './throttle';\nexport function throttleTime(duration, scheduler = async, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\nclass ThrottleTimeOperator {\n    constructor(duration, scheduler, leading, trailing) {\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));\n    }\n}\nclass ThrottleTimeSubscriber extends Subscriber {\n    constructor(destination, duration, scheduler, leading, trailing) {\n        super(destination);\n        this.duration = duration;\n        this.scheduler = scheduler;\n        this.leading = leading;\n        this.trailing = trailing;\n        this._hasTrailingValue = false;\n        this._trailingValue = null;\n    }\n    _next(value) {\n        if (this.throttled) {\n            if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n        else {\n            this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));\n            if (this.leading) {\n                this.destination.next(value);\n            }\n            else if (this.trailing) {\n                this._trailingValue = value;\n                this._hasTrailingValue = true;\n            }\n        }\n    }\n    _complete() {\n        if (this._hasTrailingValue) {\n            this.destination.next(this._trailingValue);\n            this.destination.complete();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    clearThrottle() {\n        const throttled = this.throttled;\n        if (throttled) {\n            if (this.trailing && this._hasTrailingValue) {\n                this.destination.next(this._trailingValue);\n                this._trailingValue = null;\n                this._hasTrailingValue = false;\n            }\n            throttled.unsubscribe();\n            this.remove(throttled);\n            this.throttled = null;\n        }\n    }\n}\nfunction dispatchNext(arg) {\n    const { subscriber } = arg;\n    subscriber.clearThrottle();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}