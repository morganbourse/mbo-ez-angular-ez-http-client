{"ast":null,"code":"import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n  if (!scheduler) {\n    return new Observable(subscriber => {\n      const keys = Object.keys(obj);\n\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n\n      subscriber.complete();\n    });\n  } else {\n    return new Observable(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(scheduler.schedule(dispatch, 0, {\n        keys,\n        index: 0,\n        subscriber,\n        subscription,\n        obj\n      }));\n      return subscription;\n    });\n  }\n}\nexport function dispatch(state) {\n  const {\n    keys,\n    index,\n    subscriber,\n    subscription,\n    obj\n  } = state;\n\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({\n        keys,\n        index: index + 1,\n        subscriber,\n        subscription,\n        obj\n      }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/observable/pairs.js"],"names":["Observable","Subscription","pairs","obj","scheduler","subscriber","keys","Object","i","length","closed","key","hasOwnProperty","next","complete","subscription","add","schedule","dispatch","index","state"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,KAAT,CAAeC,GAAf,EAAoBC,SAApB,EAA+B;AAClC,MAAI,CAACA,SAAL,EAAgB;AACZ,WAAO,IAAIJ,UAAJ,CAAeK,UAAU,IAAI;AAChC,YAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,GAAZ,CAAb;;AACA,WAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAT,IAAmB,CAACJ,UAAU,CAACK,MAA/C,EAAuDF,CAAC,EAAxD,EAA4D;AACxD,cAAMG,GAAG,GAAGL,IAAI,CAACE,CAAD,CAAhB;;AACA,YAAIL,GAAG,CAACS,cAAJ,CAAmBD,GAAnB,CAAJ,EAA6B;AACzBN,UAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACF,GAAD,EAAMR,GAAG,CAACQ,GAAD,CAAT,CAAhB;AACH;AACJ;;AACDN,MAAAA,UAAU,CAACS,QAAX;AACH,KATM,CAAP;AAUH,GAXD,MAYK;AACD,WAAO,IAAId,UAAJ,CAAeK,UAAU,IAAI;AAChC,YAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYH,GAAZ,CAAb;AACA,YAAMY,YAAY,GAAG,IAAId,YAAJ,EAArB;AACAc,MAAAA,YAAY,CAACC,GAAb,CAAiBZ,SAAS,CAACa,QAAV,CAAmBC,QAAnB,EAA6B,CAA7B,EAAgC;AAAEZ,QAAAA,IAAF;AAAQa,QAAAA,KAAK,EAAE,CAAf;AAAkBd,QAAAA,UAAlB;AAA8BU,QAAAA,YAA9B;AAA4CZ,QAAAA;AAA5C,OAAhC,CAAjB;AACA,aAAOY,YAAP;AACH,KALM,CAAP;AAMH;AACJ;AACD,OAAO,SAASG,QAAT,CAAkBE,KAAlB,EAAyB;AAC5B,QAAM;AAAEd,IAAAA,IAAF;AAAQa,IAAAA,KAAR;AAAed,IAAAA,UAAf;AAA2BU,IAAAA,YAA3B;AAAyCZ,IAAAA;AAAzC,MAAiDiB,KAAvD;;AACA,MAAI,CAACf,UAAU,CAACK,MAAhB,EAAwB;AACpB,QAAIS,KAAK,GAAGb,IAAI,CAACG,MAAjB,EAAyB;AACrB,YAAME,GAAG,GAAGL,IAAI,CAACa,KAAD,CAAhB;AACAd,MAAAA,UAAU,CAACQ,IAAX,CAAgB,CAACF,GAAD,EAAMR,GAAG,CAACQ,GAAD,CAAT,CAAhB;AACAI,MAAAA,YAAY,CAACC,GAAb,CAAiB,KAAKC,QAAL,CAAc;AAAEX,QAAAA,IAAF;AAAQa,QAAAA,KAAK,EAAEA,KAAK,GAAG,CAAvB;AAA0Bd,QAAAA,UAA1B;AAAsCU,QAAAA,YAAtC;AAAoDZ,QAAAA;AAApD,OAAd,CAAjB;AACH,KAJD,MAKK;AACDE,MAAAA,UAAU,CAACS,QAAX;AACH;AACJ;AACJ","sourcesContent":["import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nexport function pairs(obj, scheduler) {\n    if (!scheduler) {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n                const key = keys[i];\n                if (obj.hasOwnProperty(key)) {\n                    subscriber.next([key, obj[key]]);\n                }\n            }\n            subscriber.complete();\n        });\n    }\n    else {\n        return new Observable(subscriber => {\n            const keys = Object.keys(obj);\n            const subscription = new Subscription();\n            subscription.add(scheduler.schedule(dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n            return subscription;\n        });\n    }\n}\nexport function dispatch(state) {\n    const { keys, index, subscriber, subscription, obj } = state;\n    if (!subscriber.closed) {\n        if (index < keys.length) {\n            const key = keys[index];\n            subscriber.next([key, obj[key]]);\n            subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n        }\n        else {\n            subscriber.complete();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}