{"ast":null,"code":"import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n  if (typeof resultSelector === 'function') {\n    return source => source.pipe(switchMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n  }\n\n  return source => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator {\n  constructor(project) {\n    this.project = project;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n\n}\n\nclass SwitchMapSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, project) {\n    super(destination);\n    this.project = project;\n    this.index = 0;\n  }\n\n  _next(value) {\n    let result;\n    const index = this.index++;\n\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error(error);\n      return;\n    }\n\n    this._innerSub(result);\n  }\n\n  _innerSub(result) {\n    const innerSubscription = this.innerSubscription;\n\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  _complete() {\n    const {\n      innerSubscription\n    } = this;\n\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n\n    this.unsubscribe();\n  }\n\n  _unsubscribe() {\n    this.innerSubscription = undefined;\n  }\n\n  notifyComplete() {\n    this.innerSubscription = undefined;\n\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(innerValue) {\n    this.destination.next(innerValue);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/switchMap.js"],"names":["map","from","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","switchMap","project","resultSelector","source","pipe","a","i","b","ii","lift","SwitchMapOperator","constructor","call","subscriber","subscribe","SwitchMapSubscriber","destination","index","_next","value","result","error","_innerSub","innerSubscription","unsubscribe","innerSubscriber","add","_complete","closed","_unsubscribe","undefined","notifyComplete","isStopped","notifyNext","innerValue","next"],"mappings":"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","sourcesContent":["import { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function switchMap(project, resultSelector) {\n    if (typeof resultSelector === 'function') {\n        return (source) => source.pipe(switchMap((a, i) => from(project(a, i)).pipe(map((b, ii) => resultSelector(a, b, i, ii)))));\n    }\n    return (source) => source.lift(new SwitchMapOperator(project));\n}\nclass SwitchMapOperator {\n    constructor(project) {\n        this.project = project;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n    }\n}\nclass SwitchMapSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, project) {\n        super(destination);\n        this.project = project;\n        this.index = 0;\n    }\n    _next(value) {\n        let result;\n        const index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (error) {\n            this.destination.error(error);\n            return;\n        }\n        this._innerSub(result);\n    }\n    _innerSub(result) {\n        const innerSubscription = this.innerSubscription;\n        if (innerSubscription) {\n            innerSubscription.unsubscribe();\n        }\n        const innerSubscriber = new SimpleInnerSubscriber(this);\n        const destination = this.destination;\n        destination.add(innerSubscriber);\n        this.innerSubscription = innerSubscribe(result, innerSubscriber);\n        if (this.innerSubscription !== innerSubscriber) {\n            destination.add(this.innerSubscription);\n        }\n    }\n    _complete() {\n        const { innerSubscription } = this;\n        if (!innerSubscription || innerSubscription.closed) {\n            super._complete();\n        }\n        this.unsubscribe();\n    }\n    _unsubscribe() {\n        this.innerSubscription = undefined;\n    }\n    notifyComplete() {\n        this.innerSubscription = undefined;\n        if (this.isStopped) {\n            super._complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.destination.next(innerValue);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}