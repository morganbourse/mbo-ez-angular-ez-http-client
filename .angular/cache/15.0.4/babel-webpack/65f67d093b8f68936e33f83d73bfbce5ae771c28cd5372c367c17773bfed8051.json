{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n  return source => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator {\n  constructor(count, source) {\n    this.count = count;\n    this.source = source;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n\n}\n\nclass RetrySubscriber extends Subscriber {\n  constructor(destination, count, source) {\n    super(destination);\n    this.count = count;\n    this.source = source;\n  }\n\n  error(err) {\n    if (!this.isStopped) {\n      const {\n        source,\n        count\n      } = this;\n\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/retry.js"],"names":["Subscriber","retry","count","source","lift","RetryOperator","constructor","call","subscriber","subscribe","RetrySubscriber","destination","error","err","isStopped","_unsubscribeAndRecycle"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,KAAT,CAAeC,KAAK,GAAG,CAAC,CAAxB,EAA2B;AAC9B,SAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,aAAJ,CAAkBH,KAAlB,EAAyBC,MAAzB,CAAZ,CAAnB;AACH;;AACD,MAAME,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACJ,KAAD,EAAQC,MAAR,EAAgB;AACvB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDI,EAAAA,IAAI,CAACC,UAAD,EAAaL,MAAb,EAAqB;AACrB,WAAOA,MAAM,CAACM,SAAP,CAAiB,IAAIC,eAAJ,CAAoBF,UAApB,EAAgC,KAAKN,KAArC,EAA4C,KAAKC,MAAjD,CAAjB,CAAP;AACH;;AAPe;;AASpB,MAAMO,eAAN,SAA8BV,UAA9B,CAAyC;AACrCM,EAAAA,WAAW,CAACK,WAAD,EAAcT,KAAd,EAAqBC,MAArB,EAA6B;AACpC,UAAMQ,WAAN;AACA,SAAKT,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACH;;AACDS,EAAAA,KAAK,CAACC,GAAD,EAAM;AACP,QAAI,CAAC,KAAKC,SAAV,EAAqB;AACjB,YAAM;AAAEX,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAoB,IAA1B;;AACA,UAAIA,KAAK,KAAK,CAAd,EAAiB;AACb,eAAO,MAAMU,KAAN,CAAYC,GAAZ,CAAP;AACH,OAFD,MAGK,IAAIX,KAAK,GAAG,CAAC,CAAb,EAAgB;AACjB,aAAKA,KAAL,GAAaA,KAAK,GAAG,CAArB;AACH;;AACDC,MAAAA,MAAM,CAACM,SAAP,CAAiB,KAAKM,sBAAL,EAAjB;AACH;AACJ;;AAjBoC","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function retry(count = -1) {\n    return (source) => source.lift(new RetryOperator(count, source));\n}\nclass RetryOperator {\n    constructor(count, source) {\n        this.count = count;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n    }\n}\nclass RetrySubscriber extends Subscriber {\n    constructor(destination, count, source) {\n        super(destination);\n        this.count = count;\n        this.source = source;\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { source, count } = this;\n            if (count === 0) {\n                return super.error(err);\n            }\n            else if (count > -1) {\n                this.count = count - 1;\n            }\n            source.subscribe(this._unsubscribeAndRecycle());\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}