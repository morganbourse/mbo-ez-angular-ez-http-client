{"ast":null,"code":"import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = iterable => subscriber => {\n  const iterator = iterable[Symbol_iterator]();\n\n  do {\n    let item;\n\n    try {\n      item = iterator.next();\n    } catch (err) {\n      subscriber.error(err);\n      return subscriber;\n    }\n\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n\n    subscriber.next(item.value);\n\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/util/subscribeToIterable.js"],"names":["iterator","Symbol_iterator","subscribeToIterable","iterable","subscriber","item","next","err","error","done","complete","value","closed","return","add"],"mappings":"AAAA,SAASA,QAAQ,IAAIC,eAArB,QAA4C,oBAA5C;AACA,OAAO,MAAMC,mBAAmB,GAAIC,QAAD,IAAeC,UAAD,IAAgB;AAC7D,QAAMJ,QAAQ,GAAGG,QAAQ,CAACF,eAAD,CAAR,EAAjB;;AACA,KAAG;AACC,QAAII,IAAJ;;AACA,QAAI;AACAA,MAAAA,IAAI,GAAGL,QAAQ,CAACM,IAAT,EAAP;AACH,KAFD,CAGA,OAAOC,GAAP,EAAY;AACRH,MAAAA,UAAU,CAACI,KAAX,CAAiBD,GAAjB;AACA,aAAOH,UAAP;AACH;;AACD,QAAIC,IAAI,CAACI,IAAT,EAAe;AACXL,MAAAA,UAAU,CAACM,QAAX;AACA;AACH;;AACDN,IAAAA,UAAU,CAACE,IAAX,CAAgBD,IAAI,CAACM,KAArB;;AACA,QAAIP,UAAU,CAACQ,MAAf,EAAuB;AACnB;AACH;AACJ,GAjBD,QAiBS,IAjBT;;AAkBA,MAAI,OAAOZ,QAAQ,CAACa,MAAhB,KAA2B,UAA/B,EAA2C;AACvCT,IAAAA,UAAU,CAACU,GAAX,CAAe,MAAM;AACjB,UAAId,QAAQ,CAACa,MAAb,EAAqB;AACjBb,QAAAA,QAAQ,CAACa,MAAT;AACH;AACJ,KAJD;AAKH;;AACD,SAAOT,UAAP;AACH,CA5BM","sourcesContent":["import { iterator as Symbol_iterator } from '../symbol/iterator';\nexport const subscribeToIterable = (iterable) => (subscriber) => {\n    const iterator = iterable[Symbol_iterator]();\n    do {\n        let item;\n        try {\n            item = iterator.next();\n        }\n        catch (err) {\n            subscriber.error(err);\n            return subscriber;\n        }\n        if (item.done) {\n            subscriber.complete();\n            break;\n        }\n        subscriber.next(item.value);\n        if (subscriber.closed) {\n            break;\n        }\n    } while (true);\n    if (typeof iterator.return === 'function') {\n        subscriber.add(() => {\n            if (iterator.return) {\n                iterator.return();\n            }\n        });\n    }\n    return subscriber;\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}