{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n  return source => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator {\n  call(observer, source) {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n\n}\n\nclass IsEmptySubscriber extends Subscriber {\n  constructor(destination) {\n    super(destination);\n  }\n\n  notifyComplete(isEmpty) {\n    const destination = this.destination;\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  _next(value) {\n    this.notifyComplete(false);\n  }\n\n  _complete() {\n    this.notifyComplete(true);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/isEmpty.js"],"names":["Subscriber","isEmpty","source","lift","IsEmptyOperator","call","observer","subscribe","IsEmptySubscriber","constructor","destination","notifyComplete","next","complete","_next","value","_complete"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,OAAO,SAASC,OAAT,GAAmB;AACtB,SAAQC,MAAD,IAAYA,MAAM,CAACC,IAAP,CAAY,IAAIC,eAAJ,EAAZ,CAAnB;AACH;;AACD,MAAMA,eAAN,CAAsB;AAClBC,EAAAA,IAAI,CAACC,QAAD,EAAWJ,MAAX,EAAmB;AACnB,WAAOA,MAAM,CAACK,SAAP,CAAiB,IAAIC,iBAAJ,CAAsBF,QAAtB,CAAjB,CAAP;AACH;;AAHiB;;AAKtB,MAAME,iBAAN,SAAgCR,UAAhC,CAA2C;AACvCS,EAAAA,WAAW,CAACC,WAAD,EAAc;AACrB,UAAMA,WAAN;AACH;;AACDC,EAAAA,cAAc,CAACV,OAAD,EAAU;AACpB,UAAMS,WAAW,GAAG,KAAKA,WAAzB;AACAA,IAAAA,WAAW,CAACE,IAAZ,CAAiBX,OAAjB;AACAS,IAAAA,WAAW,CAACG,QAAZ;AACH;;AACDC,EAAAA,KAAK,CAACC,KAAD,EAAQ;AACT,SAAKJ,cAAL,CAAoB,KAApB;AACH;;AACDK,EAAAA,SAAS,GAAG;AACR,SAAKL,cAAL,CAAoB,IAApB;AACH;;AAdsC","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function isEmpty() {\n    return (source) => source.lift(new IsEmptyOperator());\n}\nclass IsEmptyOperator {\n    call(observer, source) {\n        return source.subscribe(new IsEmptySubscriber(observer));\n    }\n}\nclass IsEmptySubscriber extends Subscriber {\n    constructor(destination) {\n        super(destination);\n    }\n    notifyComplete(isEmpty) {\n        const destination = this.destination;\n        destination.next(isEmpty);\n        destination.complete();\n    }\n    _next(value) {\n        this.notifyComplete(false);\n    }\n    _complete() {\n        this.notifyComplete(true);\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}