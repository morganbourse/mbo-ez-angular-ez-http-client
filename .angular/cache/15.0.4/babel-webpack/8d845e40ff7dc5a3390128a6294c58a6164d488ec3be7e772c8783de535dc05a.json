{"ast":null,"code":"import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n  leading: true,\n  trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n  return source => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\n\nclass ThrottleOperator {\n  constructor(durationSelector, leading, trailing) {\n    this.durationSelector = durationSelector;\n    this.leading = leading;\n    this.trailing = trailing;\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n  }\n\n}\n\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n  constructor(destination, durationSelector, _leading, _trailing) {\n    super(destination);\n    this.destination = destination;\n    this.durationSelector = durationSelector;\n    this._leading = _leading;\n    this._trailing = _trailing;\n    this._hasValue = false;\n  }\n\n  _next(value) {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  send() {\n    const {\n      _hasValue,\n      _sendValue\n    } = this;\n\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue);\n    }\n\n    this._hasValue = false;\n    this._sendValue = undefined;\n  }\n\n  throttle(value) {\n    const duration = this.tryDurationSelector(value);\n\n    if (!!duration) {\n      this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  tryDurationSelector(value) {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  throttlingDone() {\n    const {\n      _throttled,\n      _trailing\n    } = this;\n\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n\n    this._throttled = undefined;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext() {\n    this.throttlingDone();\n  }\n\n  notifyComplete() {\n    this.throttlingDone();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/throttle.js"],"names":["SimpleOuterSubscriber","innerSubscribe","SimpleInnerSubscriber","defaultThrottleConfig","leading","trailing","throttle","durationSelector","config","source","lift","ThrottleOperator","constructor","call","subscriber","subscribe","ThrottleSubscriber","destination","_leading","_trailing","_hasValue","_next","value","_sendValue","_throttled","send","next","undefined","duration","tryDurationSelector","add","err","error","throttlingDone","unsubscribe","notifyNext","notifyComplete"],"mappings":"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","sourcesContent":["import { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\nexport const defaultThrottleConfig = {\n    leading: true,\n    trailing: false\n};\nexport function throttle(durationSelector, config = defaultThrottleConfig) {\n    return (source) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\nclass ThrottleOperator {\n    constructor(durationSelector, leading, trailing) {\n        this.durationSelector = durationSelector;\n        this.leading = leading;\n        this.trailing = trailing;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));\n    }\n}\nclass ThrottleSubscriber extends SimpleOuterSubscriber {\n    constructor(destination, durationSelector, _leading, _trailing) {\n        super(destination);\n        this.destination = destination;\n        this.durationSelector = durationSelector;\n        this._leading = _leading;\n        this._trailing = _trailing;\n        this._hasValue = false;\n    }\n    _next(value) {\n        this._hasValue = true;\n        this._sendValue = value;\n        if (!this._throttled) {\n            if (this._leading) {\n                this.send();\n            }\n            else {\n                this.throttle(value);\n            }\n        }\n    }\n    send() {\n        const { _hasValue, _sendValue } = this;\n        if (_hasValue) {\n            this.destination.next(_sendValue);\n            this.throttle(_sendValue);\n        }\n        this._hasValue = false;\n        this._sendValue = undefined;\n    }\n    throttle(value) {\n        const duration = this.tryDurationSelector(value);\n        if (!!duration) {\n            this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n        }\n    }\n    tryDurationSelector(value) {\n        try {\n            return this.durationSelector(value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return null;\n        }\n    }\n    throttlingDone() {\n        const { _throttled, _trailing } = this;\n        if (_throttled) {\n            _throttled.unsubscribe();\n        }\n        this._throttled = undefined;\n        if (_trailing) {\n            this.send();\n        }\n    }\n    notifyNext() {\n        this.throttlingDone();\n    }\n    notifyComplete() {\n        this.throttlingDone();\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}