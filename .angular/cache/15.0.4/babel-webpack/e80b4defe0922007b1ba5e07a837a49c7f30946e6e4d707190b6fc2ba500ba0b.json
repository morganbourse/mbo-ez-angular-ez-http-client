{"ast":null,"code":"import { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n  return function multicastOperatorFunction(source) {\n    let subjectFactory;\n\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n    return connectable;\n  };\n}\nexport class MulticastOperator {\n  constructor(subjectFactory, selector) {\n    this.subjectFactory = subjectFactory;\n    this.selector = selector;\n  }\n\n  call(subscriber, source) {\n    const {\n      selector\n    } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/multicast.js"],"names":["connectableObservableDescriptor","multicast","subjectOrSubjectFactory","selector","multicastOperatorFunction","source","subjectFactory","lift","MulticastOperator","connectable","Object","create","constructor","call","subscriber","subject","subscription","subscribe","add"],"mappings":"AAAA,SAASA,+BAAT,QAAgD,qCAAhD;AACA,OAAO,SAASC,SAAT,CAAmBC,uBAAnB,EAA4CC,QAA5C,EAAsD;AACzD,SAAO,SAASC,yBAAT,CAAmCC,MAAnC,EAA2C;AAC9C,QAAIC,cAAJ;;AACA,QAAI,OAAOJ,uBAAP,KAAmC,UAAvC,EAAmD;AAC/CI,MAAAA,cAAc,GAAGJ,uBAAjB;AACH,KAFD,MAGK;AACDI,MAAAA,cAAc,GAAG,SAASA,cAAT,GAA0B;AACvC,eAAOJ,uBAAP;AACH,OAFD;AAGH;;AACD,QAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAChC,aAAOE,MAAM,CAACE,IAAP,CAAY,IAAIC,iBAAJ,CAAsBF,cAAtB,EAAsCH,QAAtC,CAAZ,CAAP;AACH;;AACD,UAAMM,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcN,MAAd,EAAsBL,+BAAtB,CAApB;AACAS,IAAAA,WAAW,CAACJ,MAAZ,GAAqBA,MAArB;AACAI,IAAAA,WAAW,CAACH,cAAZ,GAA6BA,cAA7B;AACA,WAAOG,WAAP;AACH,GAjBD;AAkBH;AACD,OAAO,MAAMD,iBAAN,CAAwB;AAC3BI,EAAAA,WAAW,CAACN,cAAD,EAAiBH,QAAjB,EAA2B;AAClC,SAAKG,cAAL,GAAsBA,cAAtB;AACA,SAAKH,QAAL,GAAgBA,QAAhB;AACH;;AACDU,EAAAA,IAAI,CAACC,UAAD,EAAaT,MAAb,EAAqB;AACrB,UAAM;AAAEF,MAAAA;AAAF,QAAe,IAArB;AACA,UAAMY,OAAO,GAAG,KAAKT,cAAL,EAAhB;AACA,UAAMU,YAAY,GAAGb,QAAQ,CAACY,OAAD,CAAR,CAAkBE,SAAlB,CAA4BH,UAA5B,CAArB;AACAE,IAAAA,YAAY,CAACE,GAAb,CAAiBb,MAAM,CAACY,SAAP,CAAiBF,OAAjB,CAAjB;AACA,WAAOC,YAAP;AACH;;AAX0B","sourcesContent":["import { connectableObservableDescriptor } from '../observable/ConnectableObservable';\nexport function multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        let subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        const connectable = Object.create(source, connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nexport class MulticastOperator {\n    constructor(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    call(subscriber, source) {\n        const { selector } = this;\n        const subject = this.subjectFactory();\n        const subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}