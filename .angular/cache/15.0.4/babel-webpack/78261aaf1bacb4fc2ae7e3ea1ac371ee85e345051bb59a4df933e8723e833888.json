{"ast":null,"code":"import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n  constructor(source, delayTime = 0, scheduler = asap) {\n    super();\n    this.source = source;\n    this.delayTime = delayTime;\n    this.scheduler = scheduler;\n\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  static create(source, delay = 0, scheduler = asap) {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  static dispatch(arg) {\n    const {\n      source,\n      subscriber\n    } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  _subscribe(subscriber) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n    return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n      source,\n      subscriber\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/observable/SubscribeOnObservable.js"],"names":["Observable","asap","isNumeric","SubscribeOnObservable","constructor","source","delayTime","scheduler","schedule","create","delay","dispatch","arg","subscriber","add","subscribe","_subscribe"],"mappings":"AAAA,SAASA,UAAT,QAA2B,eAA3B;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAO,MAAMC,qBAAN,SAAoCH,UAApC,CAA+C;AAClDI,EAAAA,WAAW,CAACC,MAAD,EAASC,SAAS,GAAG,CAArB,EAAwBC,SAAS,GAAGN,IAApC,EAA0C;AACjD;AACA,SAAKI,MAAL,GAAcA,MAAd;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;;AACA,QAAI,CAACL,SAAS,CAACI,SAAD,CAAV,IAAyBA,SAAS,GAAG,CAAzC,EAA4C;AACxC,WAAKA,SAAL,GAAiB,CAAjB;AACH;;AACD,QAAI,CAACC,SAAD,IAAc,OAAOA,SAAS,CAACC,QAAjB,KAA8B,UAAhD,EAA4D;AACxD,WAAKD,SAAL,GAAiBN,IAAjB;AACH;AACJ;;AACY,SAANQ,MAAM,CAACJ,MAAD,EAASK,KAAK,GAAG,CAAjB,EAAoBH,SAAS,GAAGN,IAAhC,EAAsC;AAC/C,WAAO,IAAIE,qBAAJ,CAA0BE,MAA1B,EAAkCK,KAAlC,EAAyCH,SAAzC,CAAP;AACH;;AACc,SAARI,QAAQ,CAACC,GAAD,EAAM;AACjB,UAAM;AAAEP,MAAAA,MAAF;AAAUQ,MAAAA;AAAV,QAAyBD,GAA/B;AACA,WAAO,KAAKE,GAAL,CAAST,MAAM,CAACU,SAAP,CAAiBF,UAAjB,CAAT,CAAP;AACH;;AACDG,EAAAA,UAAU,CAACH,UAAD,EAAa;AACnB,UAAMH,KAAK,GAAG,KAAKJ,SAAnB;AACA,UAAMD,MAAM,GAAG,KAAKA,MAApB;AACA,UAAME,SAAS,GAAG,KAAKA,SAAvB;AACA,WAAOA,SAAS,CAACC,QAAV,CAAmBL,qBAAqB,CAACQ,QAAzC,EAAmDD,KAAnD,EAA0D;AAC7DL,MAAAA,MAD6D;AACrDQ,MAAAA;AADqD,KAA1D,CAAP;AAGH;;AA3BiD","sourcesContent":["import { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\nexport class SubscribeOnObservable extends Observable {\n    constructor(source, delayTime = 0, scheduler = asap) {\n        super();\n        this.source = source;\n        this.delayTime = delayTime;\n        this.scheduler = scheduler;\n        if (!isNumeric(delayTime) || delayTime < 0) {\n            this.delayTime = 0;\n        }\n        if (!scheduler || typeof scheduler.schedule !== 'function') {\n            this.scheduler = asap;\n        }\n    }\n    static create(source, delay = 0, scheduler = asap) {\n        return new SubscribeOnObservable(source, delay, scheduler);\n    }\n    static dispatch(arg) {\n        const { source, subscriber } = arg;\n        return this.add(source.subscribe(subscriber));\n    }\n    _subscribe(subscriber) {\n        const delay = this.delayTime;\n        const source = this.source;\n        const scheduler = this.scheduler;\n        return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {\n            source, subscriber\n        });\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}