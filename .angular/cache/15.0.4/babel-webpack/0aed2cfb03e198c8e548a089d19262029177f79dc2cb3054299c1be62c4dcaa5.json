{"ast":null,"code":"import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n  let resultSelector;\n  let initialState;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions;\n    resultSelector = identity;\n    scheduler = resultSelectorOrObservable;\n  } else {\n    initialState = initialStateOrOptions;\n    resultSelector = resultSelectorOrObservable;\n  }\n\n  return new Observable(subscriber => {\n    let state = initialState;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult;\n\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n\n      let value;\n\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n\n      subscriber.next(value);\n\n      if (subscriber.closed) {\n        break;\n      }\n\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch(state) {\n  const {\n    subscriber,\n    condition\n  } = state;\n\n  if (subscriber.closed) {\n    return undefined;\n  }\n\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n\n  if (condition) {\n    let conditionResult;\n\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n\n  let value;\n\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n\n  if (subscriber.closed) {\n    return undefined;\n  }\n\n  subscriber.next(value);\n\n  if (subscriber.closed) {\n    return undefined;\n  }\n\n  return this.schedule(state);\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/observable/generate.js"],"names":["Observable","identity","isScheduler","generate","initialStateOrOptions","condition","iterate","resultSelectorOrObservable","scheduler","resultSelector","initialState","arguments","length","options","undefined","subscriber","state","schedule","dispatch","conditionResult","err","error","complete","value","next","closed","needIterate"],"mappings":"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","sourcesContent":["import { Observable } from '../Observable';\nimport { identity } from '../util/identity';\nimport { isScheduler } from '../util/isScheduler';\nexport function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {\n    let resultSelector;\n    let initialState;\n    if (arguments.length == 1) {\n        const options = initialStateOrOptions;\n        initialState = options.initialState;\n        condition = options.condition;\n        iterate = options.iterate;\n        resultSelector = options.resultSelector || identity;\n        scheduler = options.scheduler;\n    }\n    else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n        initialState = initialStateOrOptions;\n        resultSelector = identity;\n        scheduler = resultSelectorOrObservable;\n    }\n    else {\n        initialState = initialStateOrOptions;\n        resultSelector = resultSelectorOrObservable;\n    }\n    return new Observable(subscriber => {\n        let state = initialState;\n        if (scheduler) {\n            return scheduler.schedule(dispatch, 0, {\n                subscriber,\n                iterate,\n                condition,\n                resultSelector,\n                state\n            });\n        }\n        do {\n            if (condition) {\n                let conditionResult;\n                try {\n                    conditionResult = condition(state);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return undefined;\n                }\n                if (!conditionResult) {\n                    subscriber.complete();\n                    break;\n                }\n            }\n            let value;\n            try {\n                value = resultSelector(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n            subscriber.next(value);\n            if (subscriber.closed) {\n                break;\n            }\n            try {\n                state = iterate(state);\n            }\n            catch (err) {\n                subscriber.error(err);\n                return undefined;\n            }\n        } while (true);\n        return undefined;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, condition } = state;\n    if (subscriber.closed) {\n        return undefined;\n    }\n    if (state.needIterate) {\n        try {\n            state.state = state.iterate(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n    }\n    else {\n        state.needIterate = true;\n    }\n    if (condition) {\n        let conditionResult;\n        try {\n            conditionResult = condition(state.state);\n        }\n        catch (err) {\n            subscriber.error(err);\n            return undefined;\n        }\n        if (!conditionResult) {\n            subscriber.complete();\n            return undefined;\n        }\n        if (subscriber.closed) {\n            return undefined;\n        }\n    }\n    let value;\n    try {\n        value = state.resultSelector(state.state);\n    }\n    catch (err) {\n        subscriber.error(err);\n        return undefined;\n    }\n    if (subscriber.closed) {\n        return undefined;\n    }\n    subscriber.next(value);\n    if (subscriber.closed) {\n        return undefined;\n    }\n    return this.schedule(state);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}