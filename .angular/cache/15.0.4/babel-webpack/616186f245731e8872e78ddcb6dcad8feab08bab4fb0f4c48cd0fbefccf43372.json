{"ast":null,"code":"import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n  return function bufferCountOperatorFunction(source) {\n    return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator {\n  constructor(bufferSize, startBufferEvery) {\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber, source) {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n\n}\n\nclass BufferCountSubscriber extends Subscriber {\n  constructor(destination, bufferSize) {\n    super(destination);\n    this.bufferSize = bufferSize;\n    this.buffer = [];\n  }\n\n  _next(value) {\n    const buffer = this.buffer;\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  _complete() {\n    const buffer = this.buffer;\n\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n\n    super._complete();\n  }\n\n}\n\nclass BufferSkipCountSubscriber extends Subscriber {\n  constructor(destination, bufferSize, startBufferEvery) {\n    super(destination);\n    this.bufferSize = bufferSize;\n    this.startBufferEvery = startBufferEvery;\n    this.buffers = [];\n    this.count = 0;\n  }\n\n  _next(value) {\n    const {\n      bufferSize,\n      startBufferEvery,\n      buffers,\n      count\n    } = this;\n    this.count++;\n\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--;) {\n      const buffer = buffers[i];\n      buffer.push(value);\n\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  _complete() {\n    const {\n      buffers,\n      destination\n    } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n\n    super._complete();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/operators/bufferCount.js"],"names":["Subscriber","bufferCount","bufferSize","startBufferEvery","bufferCountOperatorFunction","source","lift","BufferCountOperator","constructor","subscriberClass","BufferCountSubscriber","BufferSkipCountSubscriber","call","subscriber","subscribe","destination","buffer","_next","value","push","length","next","_complete","buffers","count","i","splice","shift"],"mappings":"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","sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function bufferCount(bufferSize, startBufferEvery = null) {\n    return function bufferCountOperatorFunction(source) {\n        return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));\n    };\n}\nclass BufferCountOperator {\n    constructor(bufferSize, startBufferEvery) {\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        if (!startBufferEvery || bufferSize === startBufferEvery) {\n            this.subscriberClass = BufferCountSubscriber;\n        }\n        else {\n            this.subscriberClass = BufferSkipCountSubscriber;\n        }\n    }\n    call(subscriber, source) {\n        return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n    }\n}\nclass BufferCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.buffer = [];\n    }\n    _next(value) {\n        const buffer = this.buffer;\n        buffer.push(value);\n        if (buffer.length == this.bufferSize) {\n            this.destination.next(buffer);\n            this.buffer = [];\n        }\n    }\n    _complete() {\n        const buffer = this.buffer;\n        if (buffer.length > 0) {\n            this.destination.next(buffer);\n        }\n        super._complete();\n    }\n}\nclass BufferSkipCountSubscriber extends Subscriber {\n    constructor(destination, bufferSize, startBufferEvery) {\n        super(destination);\n        this.bufferSize = bufferSize;\n        this.startBufferEvery = startBufferEvery;\n        this.buffers = [];\n        this.count = 0;\n    }\n    _next(value) {\n        const { bufferSize, startBufferEvery, buffers, count } = this;\n        this.count++;\n        if (count % startBufferEvery === 0) {\n            buffers.push([]);\n        }\n        for (let i = buffers.length; i--;) {\n            const buffer = buffers[i];\n            buffer.push(value);\n            if (buffer.length === bufferSize) {\n                buffers.splice(i, 1);\n                this.destination.next(buffer);\n            }\n        }\n    }\n    _complete() {\n        const { buffers, destination } = this;\n        while (buffers.length > 0) {\n            let buffer = buffers.shift();\n            if (buffer.length > 0) {\n                destination.next(buffer);\n            }\n        }\n        super._complete();\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}