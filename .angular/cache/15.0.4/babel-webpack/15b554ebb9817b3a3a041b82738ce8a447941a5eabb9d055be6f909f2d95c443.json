{"ast":null,"code":"import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport class Subscriber extends Subscription {\n  constructor(destinationOrNext, error, complete) {\n    super();\n    this.syncErrorValue = null;\n    this.syncErrorThrown = false;\n    this.syncErrorThrowable = false;\n    this.isStopped = false;\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber(this, destinationOrNext);\n          }\n\n          break;\n        }\n\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  [rxSubscriberSymbol]() {\n    return this;\n  }\n\n  static create(next, error, complete) {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  next(value) {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  error(err) {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._error(err);\n    }\n  }\n\n  complete() {\n    if (!this.isStopped) {\n      this.isStopped = true;\n\n      this._complete();\n    }\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  _next(value) {\n    this.destination.next(value);\n  }\n\n  _error(err) {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  _complete() {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  _unsubscribeAndRecycle() {\n    const {\n      _parentOrParents\n    } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n\n}\nexport class SafeSubscriber extends Subscriber {\n  constructor(_parentSubscriber, observerOrNext, error, complete) {\n    super();\n    this._parentSubscriber = _parentSubscriber;\n    let next;\n    let context = this;\n\n    if (isFunction(observerOrNext)) {\n      next = observerOrNext;\n    } else if (observerOrNext) {\n      next = observerOrNext.next;\n      error = observerOrNext.error;\n      complete = observerOrNext.complete;\n\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n\n        if (isFunction(context.unsubscribe)) {\n          this.add(context.unsubscribe.bind(context));\n        }\n\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value) {\n    if (!this.isStopped && this._next) {\n      const {\n        _parentSubscriber\n      } = this;\n\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err) {\n    if (!this.isStopped) {\n      const {\n        _parentSubscriber\n      } = this;\n      const {\n        useDeprecatedSynchronousErrorHandling\n      } = config;\n\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete() {\n    if (!this.isStopped) {\n      const {\n        _parentSubscriber\n      } = this;\n\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  __tryOrUnsub(fn, value) {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  __tryOrSetError(parent, fn, value) {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  _unsubscribe() {\n    const {\n      _parentSubscriber\n    } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n\n    _parentSubscriber.unsubscribe();\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/Subscriber.js"],"names":["isFunction","empty","emptyObserver","Subscription","rxSubscriber","rxSubscriberSymbol","config","hostReportError","Subscriber","constructor","destinationOrNext","error","complete","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","length","destination","add","SafeSubscriber","create","next","subscriber","value","_next","err","_error","_complete","unsubscribe","closed","_unsubscribeAndRecycle","_parentOrParents","_parentSubscriber","observerOrNext","context","Object","bind","_context","useDeprecatedSynchronousErrorHandling","__tryOrUnsub","__tryOrSetError","wrappedComplete","call","fn","parent","Error","_unsubscribe"],"mappings":"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","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport class Subscriber extends Subscription {\n    constructor(destinationOrNext, error, complete) {\n        super();\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        this.destination = destinationOrNext;\n                        destinationOrNext.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    [rxSubscriberSymbol]() { return this; }\n    static create(next, error, complete) {\n        const subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    }\n    next(value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    }\n    unsubscribe() {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        super.unsubscribe();\n    }\n    _next(value) {\n        this.destination.next(value);\n    }\n    _error(err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.destination.complete();\n        this.unsubscribe();\n    }\n    _unsubscribeAndRecycle() {\n        const { _parentOrParents } = this;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    }\n}\nexport class SafeSubscriber extends Subscriber {\n    constructor(_parentSubscriber, observerOrNext, error, complete) {\n        super();\n        this._parentSubscriber = _parentSubscriber;\n        let next;\n        let context = this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    next(value) {\n        if (!this.isStopped && this._next) {\n            const { _parentSubscriber } = this;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    }\n    error(err) {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            const { useDeprecatedSynchronousErrorHandling } = config;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    }\n    complete() {\n        if (!this.isStopped) {\n            const { _parentSubscriber } = this;\n            if (this._complete) {\n                const wrappedComplete = () => this._complete.call(this._context);\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    }\n    __tryOrUnsub(fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    }\n    __tryOrSetError(parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    }\n    _unsubscribe() {\n        const { _parentSubscriber } = this;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}