{"ast":null,"code":"import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n  constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n    this.maxFrames = maxFrames;\n    this.frame = 0;\n    this.index = -1;\n  }\n\n  flush() {\n    const {\n      actions,\n      maxFrames\n    } = this;\n    let error, action;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n\n      throw error;\n    }\n  }\n\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n  constructor(scheduler, work, index = scheduler.index += 1) {\n    super(scheduler, work);\n    this.scheduler = scheduler;\n    this.work = work;\n    this.index = index;\n    this.active = true;\n    this.index = scheduler.index = index;\n  }\n\n  schedule(state, delay = 0) {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n\n    this.active = false;\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  requestAsyncId(scheduler, id, delay = 0) {\n    this.delay = scheduler.frame + delay;\n    const {\n      actions\n    } = scheduler;\n    actions.push(this);\n    actions.sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  recycleAsyncId(scheduler, id, delay = 0) {\n    return undefined;\n  }\n\n  _execute(state, delay) {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  static sortActions(a, b) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Morgan/Desktop/DEV/angular/mbo-ez-angular-ez-http-client/node_modules/rxjs/_esm2015/internal/scheduler/VirtualTimeScheduler.js"],"names":["AsyncAction","AsyncScheduler","VirtualTimeScheduler","constructor","SchedulerAction","VirtualAction","maxFrames","Number","POSITIVE_INFINITY","frame","index","flush","actions","error","action","delay","shift","execute","state","unsubscribe","frameTimeFactor","scheduler","work","active","schedule","id","add","requestAsyncId","push","sort","sortActions","recycleAsyncId","undefined","_execute","a","b"],"mappings":"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","sourcesContent":["import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport class VirtualTimeScheduler extends AsyncScheduler {\n    constructor(SchedulerAction = VirtualAction, maxFrames = Number.POSITIVE_INFINITY) {\n        super(SchedulerAction, () => this.frame);\n        this.maxFrames = maxFrames;\n        this.frame = 0;\n        this.index = -1;\n    }\n    flush() {\n        const { actions, maxFrames } = this;\n        let error, action;\n        while ((action = actions[0]) && action.delay <= maxFrames) {\n            actions.shift();\n            this.frame = action.delay;\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }\n        if (error) {\n            while (action = actions.shift()) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\nVirtualTimeScheduler.frameTimeFactor = 10;\nexport class VirtualAction extends AsyncAction {\n    constructor(scheduler, work, index = scheduler.index += 1) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.index = index;\n        this.active = true;\n        this.index = scheduler.index = index;\n    }\n    schedule(state, delay = 0) {\n        if (!this.id) {\n            return super.schedule(state, delay);\n        }\n        this.active = false;\n        const action = new VirtualAction(this.scheduler, this.work);\n        this.add(action);\n        return action.schedule(state, delay);\n    }\n    requestAsyncId(scheduler, id, delay = 0) {\n        this.delay = scheduler.frame + delay;\n        const { actions } = scheduler;\n        actions.push(this);\n        actions.sort(VirtualAction.sortActions);\n        return true;\n    }\n    recycleAsyncId(scheduler, id, delay = 0) {\n        return undefined;\n    }\n    _execute(state, delay) {\n        if (this.active === true) {\n            return super._execute(state, delay);\n        }\n    }\n    static sortActions(a, b) {\n        if (a.delay === b.delay) {\n            if (a.index === b.index) {\n                return 0;\n            }\n            else if (a.index > b.index) {\n                return 1;\n            }\n            else {\n                return -1;\n            }\n        }\n        else if (a.delay > b.delay) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}